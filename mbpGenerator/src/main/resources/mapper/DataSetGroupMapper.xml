<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zmz.mapper.DataSetGroupMapper">
  <resultMap id="BaseResultMap" type="org.zmz.model.DataSetGroup">
    <id column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="group_type" jdbcType="VARCHAR" property="groupType" />
    <result column="status_cd" jdbcType="VARCHAR" property="statusCd" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="app_id" jdbcType="BIGINT" property="appId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    group_id, group_name, group_type, status_cd, seq, app_id
  </sql>
  <select id="selectByExample" parameterType="org.zmz.model.DataSetGroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_sql_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_sql_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_sql_group
    where group_id = #{groupId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.zmz.model.DataSetGroupExample">
    delete from app_sql_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zmz.model.DataSetGroup">
    insert into app_sql_group (group_id, group_name, group_type, 
      status_cd, seq, app_id
      )
    values (#{groupId,jdbcType=BIGINT}, #{groupName,jdbcType=VARCHAR}, #{groupType,jdbcType=VARCHAR}, 
      #{statusCd,jdbcType=VARCHAR}, #{seq,jdbcType=INTEGER}, #{appId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.zmz.model.DataSetGroup">
    insert into app_sql_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="groupType != null">
        group_type,
      </if>
      <if test="statusCd != null">
        status_cd,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="appId != null">
        app_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupType != null">
        #{groupType,jdbcType=VARCHAR},
      </if>
      <if test="statusCd != null">
        #{statusCd,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zmz.model.DataSetGroupExample" resultType="java.lang.Long">
    select count(*) from app_sql_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update app_sql_group
    <set>
      <if test="row.groupId != null">
        group_id = #{row.groupId,jdbcType=BIGINT},
      </if>
      <if test="row.groupName != null">
        group_name = #{row.groupName,jdbcType=VARCHAR},
      </if>
      <if test="row.groupType != null">
        group_type = #{row.groupType,jdbcType=VARCHAR},
      </if>
      <if test="row.statusCd != null">
        status_cd = #{row.statusCd,jdbcType=VARCHAR},
      </if>
      <if test="row.seq != null">
        seq = #{row.seq,jdbcType=INTEGER},
      </if>
      <if test="row.appId != null">
        app_id = #{row.appId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update app_sql_group
    set group_id = #{row.groupId,jdbcType=BIGINT},
      group_name = #{row.groupName,jdbcType=VARCHAR},
      group_type = #{row.groupType,jdbcType=VARCHAR},
      status_cd = #{row.statusCd,jdbcType=VARCHAR},
      seq = #{row.seq,jdbcType=INTEGER},
      app_id = #{row.appId,jdbcType=BIGINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zmz.model.DataSetGroup">
    update app_sql_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupType != null">
        group_type = #{groupType,jdbcType=VARCHAR},
      </if>
      <if test="statusCd != null">
        status_cd = #{statusCd,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=BIGINT},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zmz.model.DataSetGroup">
    update app_sql_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      group_type = #{groupType,jdbcType=VARCHAR},
      status_cd = #{statusCd,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=BIGINT}
    where group_id = #{groupId,jdbcType=BIGINT}
  </update>
</mapper>